[gd_scene load_steps=4 format=3 uid="uid://be56ljip25n78"]

[ext_resource type="Texture2D" uid="uid://vlkk6v7rbvnw" path="res://bubble2.webp" id="1_1ylpp"]

[sub_resource type="GDScript" id="GDScript_dbuv0"]
script/source = "extends CharacterBody2D


const SPEED = 400.0
const JUMP_VELOCITY = -400.0

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")
var boost = false


func _physics_process(delta):
	var speed = SPEED * 3 if boost else SPEED
	var directionX = Input.get_axis(\"ui_left\", \"ui_right\")
	if directionX:
		velocity.x = directionX * speed
	else:
		velocity.x = move_toward(velocity.x, 0, speed/100)
	var directionY = Input.get_axis(\"ui_up\", \"ui_down\")
	if directionY:
		velocity.y = directionY * speed
	else:
		velocity.y = move_toward(velocity.y, 0, speed/100)

	move_and_slide()
	for i in range(get_slide_collision_count()):
		#var collision = move_and_collide(velocity * delta)
		var collision = get_slide_collision(i)
		const imageSize = 320
		var body = collision.get_collider()
		var distance = (body.position - position).length()
		var overlap = (scale.x * imageSize) + (body.scale.x * imageSize) - distance
		if overlap > 0:
			if body.scale.x > scale.x:
				var r = imageSize * scale.x
				var s = scale.x - (overlap / (imageSize * scale.x))
				scale = Vector2(s, s)
				var areaLost = (PI * r**2) - (PI * (s * imageSize)**2)
				r = imageSize * body.scale.x
				var area = PI * r**2 + areaLost
				r = sqrt(area/PI)
				s = r / imageSize
				body.scale = Vector2(s, s)
			else:
				var r = imageSize * body.scale.x
				var s = body.scale.x - (overlap / (imageSize * body.scale.x))
				body.scale = Vector2(s, s)
				var areaLost = (PI * r**2) - (PI * (s * imageSize)**2)
				r = imageSize * scale.x
				var area = PI * r**2 + areaLost
				r = sqrt(area/PI)
				s = r / imageSize
				scale = Vector2(s, s)
			
		#var s = distance * (ratio) / 640
		#scale = Vector2(s, s)
		#s = distance * (1-ratio) / 640
		#body.scale = Vector2(s, s)
		if scale.x < .05:
			get_tree().reload_current_scene()
		if body.scale.x < .05:
			body.queue_free()

func _input(event):
	if event.is_action_pressed(\"ui_accept\"):
		boost = true
	if event.is_action_released(\"ui_accept\"):
		boost = false
		position += Vector2(1,0)
"

[sub_resource type="CircleShape2D" id="CircleShape2D_w4ilh"]
radius = 318.0

[node name="player" type="CharacterBody2D"]
motion_mode = 1
script = SubResource("GDScript_dbuv0")

[node name="image" type="Sprite2D" parent="."]
texture = ExtResource("1_1ylpp")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_w4ilh")
